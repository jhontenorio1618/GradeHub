<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" version="3.0.2" name="com.github.gradehub.repositories.CourseRepositoryTest" time="1.864" tests="5" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="23"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/jhon/GradeHub/target/test-classes:/Users/jhon/GradeHub/target/classes:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.4.1/spring-boot-starter-web-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter/3.4.1/spring-boot-starter-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.4.1/spring-boot-starter-logging-3.4.1.jar:/Users/jhon/.m2/repository/ch/qos/logback/logback-classic/1.5.12/logback-classic-1.5.12.jar:/Users/jhon/.m2/repository/ch/qos/logback/logback-core/1.5.12/logback-core-1.5.12.jar:/Users/jhon/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.3/log4j-to-slf4j-2.24.3.jar:/Users/jhon/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.3/log4j-api-2.24.3.jar:/Users/jhon/.m2/repository/org/slf4j/jul-to-slf4j/2.0.16/jul-to-slf4j-2.0.16.jar:/Users/jhon/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/jhon/.m2/repository/org/yaml/snakeyaml/2.3/snakeyaml-2.3.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.4.1/spring-boot-starter-json-3.4.1.jar:/Users/jhon/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.18.2/jackson-databind-2.18.2.jar:/Users/jhon/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.18.2/jackson-annotations-2.18.2.jar:/Users/jhon/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.18.2/jackson-core-2.18.2.jar:/Users/jhon/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.18.2/jackson-datatype-jdk8-2.18.2.jar:/Users/jhon/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.18.2/jackson-datatype-jsr310-2.18.2.jar:/Users/jhon/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.18.2/jackson-module-parameter-names-2.18.2.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.4.1/spring-boot-starter-tomcat-3.4.1.jar:/Users/jhon/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.34/tomcat-embed-core-10.1.34.jar:/Users/jhon/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.34/tomcat-embed-websocket-10.1.34.jar:/Users/jhon/.m2/repository/org/springframework/spring-web/6.2.1/spring-web-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-beans/6.2.1/spring-beans-6.2.1.jar:/Users/jhon/.m2/repository/io/micrometer/micrometer-observation/1.14.2/micrometer-observation-1.14.2.jar:/Users/jhon/.m2/repository/io/micrometer/micrometer-commons/1.14.2/micrometer-commons-1.14.2.jar:/Users/jhon/.m2/repository/org/springframework/spring-webmvc/6.2.1/spring-webmvc-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-context/6.2.1/spring-context-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-expression/6.2.1/spring-expression-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.4.1/spring-boot-starter-data-jpa-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.4.1/spring-boot-starter-jdbc-3.4.1.jar:/Users/jhon/.m2/repository/com/zaxxer/HikariCP/5.1.0/HikariCP-5.1.0.jar:/Users/jhon/.m2/repository/org/springframework/spring-jdbc/6.2.1/spring-jdbc-6.2.1.jar:/Users/jhon/.m2/repository/org/hibernate/orm/hibernate-core/6.6.4.Final/hibernate-core-6.6.4.Final.jar:/Users/jhon/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/jhon/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/jhon/.m2/repository/org/jboss/logging/jboss-logging/3.6.1.Final/jboss-logging-3.6.1.Final.jar:/Users/jhon/.m2/repository/org/hibernate/common/hibernate-commons-annotations/7.0.3.Final/hibernate-commons-annotations-7.0.3.Final.jar:/Users/jhon/.m2/repository/io/smallrye/jandex/3.2.0/jandex-3.2.0.jar:/Users/jhon/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/Users/jhon/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/Users/jhon/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/Users/jhon/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/Users/jhon/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/Users/jhon/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/jhon/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/jhon/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/jhon/.m2/repository/org/springframework/data/spring-data-jpa/3.4.1/spring-data-jpa-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/data/spring-data-commons/3.4.1/spring-data-commons-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-orm/6.2.1/spring-orm-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-tx/6.2.1/spring-tx-6.2.1.jar:/Users/jhon/.m2/repository/org/slf4j/slf4j-api/2.0.16/slf4j-api-2.0.16.jar:/Users/jhon/.m2/repository/org/springframework/spring-aspects/6.2.1/spring-aspects-6.2.1.jar:/Users/jhon/.m2/repository/org/aspectj/aspectjweaver/1.9.22.1/aspectjweaver-1.9.22.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.4.1/spring-boot-starter-security-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-aop/6.2.1/spring-aop-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/security/spring-security-config/6.4.2/spring-security-config-6.4.2.jar:/Users/jhon/.m2/repository/org/springframework/security/spring-security-web/6.4.2/spring-security-web-6.4.2.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.4.1/spring-boot-starter-validation-3.4.1.jar:/Users/jhon/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.34/tomcat-embed-el-10.1.34.jar:/Users/jhon/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.2.Final/hibernate-validator-8.0.2.Final.jar:/Users/jhon/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-devtools/3.4.1/spring-boot-devtools-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot/3.4.1/spring-boot-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.4.1/spring-boot-autoconfigure-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.4.1/spring-boot-starter-test-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-test/3.4.1/spring-boot-test-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.4.1/spring-boot-test-autoconfigure-3.4.1.jar:/Users/jhon/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/jhon/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/Users/jhon/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/Users/jhon/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/Users/jhon/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/Users/jhon/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/Users/jhon/.m2/repository/org/assertj/assertj-core/3.26.3/assertj-core-3.26.3.jar:/Users/jhon/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/Users/jhon/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/jhon/.m2/repository/org/junit/jupiter/junit-jupiter/5.12.0/junit-jupiter-5.12.0.jar:/Users/jhon/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.12.0/junit-jupiter-params-5.12.0.jar:/Users/jhon/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.12.0/junit-jupiter-engine-5.12.0.jar:/Users/jhon/.m2/repository/org/junit/platform/junit-platform-engine/1.12.0/junit-platform-engine-1.12.0.jar:/Users/jhon/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/Users/jhon/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/jhon/.m2/repository/org/springframework/spring-core/6.2.1/spring-core-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-jcl/6.2.1/spring-jcl-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-test/6.2.1/spring-test-6.2.1.jar:/Users/jhon/.m2/repository/org/xmlunit/xmlunit-core/2.10.0/xmlunit-core-2.10.0.jar:/Users/jhon/.m2/repository/org/postgresql/postgresql/42.7.4/postgresql-42.7.4.jar:/Users/jhon/.m2/repository/org/checkerframework/checker-qual/3.42.0/checker-qual-3.42.0.jar:/Users/jhon/.m2/repository/com/h2database/h2/2.3.232/h2-2.3.232.jar:/Users/jhon/.m2/repository/io/github/cdimascio/java-dotenv/5.2.2/java-dotenv-5.2.2.jar:/Users/jhon/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib/1.9.25/kotlin-stdlib-1.9.25.jar:/Users/jhon/.m2/repository/org/jetbrains/annotations/13.0/annotations-13.0.jar:/Users/jhon/.m2/repository/org/springframework/security/spring-security-test/6.4.2/spring-security-test-6.4.2.jar:/Users/jhon/.m2/repository/org/springframework/security/spring-security-core/6.4.2/spring-security-core-6.4.2.jar:/Users/jhon/.m2/repository/org/springframework/security/spring-security-crypto/6.4.2/spring-security-crypto-6.4.2.jar:/Users/jhon/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:/Users/jhon/.m2/repository/org/projectlombok/lombok-mapstruct-binding/0.2.0/lombok-mapstruct-binding-0.2.0.jar:/Users/jhon/.m2/repository/org/mockito/mockito-core/5.14.2/mockito-core-5.14.2.jar:/Users/jhon/.m2/repository/net/bytebuddy/byte-buddy/1.15.11/byte-buddy-1.15.11.jar:/Users/jhon/.m2/repository/net/bytebuddy/byte-buddy-agent/1.15.11/byte-buddy-agent-1.15.11.jar:/Users/jhon/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/jhon/.m2/repository/org/mockito/mockito-junit-jupiter/5.14.2/mockito-junit-jupiter-5.14.2.jar:/Users/jhon/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.12.0/junit-jupiter-api-5.12.0.jar:/Users/jhon/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/jhon/.m2/repository/org/junit/platform/junit-platform-commons/1.12.0/junit-platform-commons-1.12.0.jar:/Users/jhon/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:"/>
    <property name="java.vm.vendor" value="Homebrew"/>
    <property name="net.bytebuddy.experimental" value="true"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="user.timezone" value="America/Chicago"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="PROD_DB_PASSWORD" value="JChicagoo1618$$"/>
    <property name="TEST_DB_PASSWORD" value="password"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="23"/>
    <property name="APPLICATION_NAME" value="GradeHub"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="/usr/local/Cellar/openjdk/23.0.1/libexec/openjdk.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/jhon/GradeHub/target/surefire/surefirebooter-20250306230304948_3.jar /Users/jhon/GradeHub/target/surefire 2025-03-06T23-03-04_762-jvmRun1 surefire-20250306230304948_1tmp surefire_0-20250306230304948_2tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/jhon/GradeHub/target/test-classes:/Users/jhon/GradeHub/target/classes:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.4.1/spring-boot-starter-web-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter/3.4.1/spring-boot-starter-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.4.1/spring-boot-starter-logging-3.4.1.jar:/Users/jhon/.m2/repository/ch/qos/logback/logback-classic/1.5.12/logback-classic-1.5.12.jar:/Users/jhon/.m2/repository/ch/qos/logback/logback-core/1.5.12/logback-core-1.5.12.jar:/Users/jhon/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.3/log4j-to-slf4j-2.24.3.jar:/Users/jhon/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.3/log4j-api-2.24.3.jar:/Users/jhon/.m2/repository/org/slf4j/jul-to-slf4j/2.0.16/jul-to-slf4j-2.0.16.jar:/Users/jhon/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/jhon/.m2/repository/org/yaml/snakeyaml/2.3/snakeyaml-2.3.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.4.1/spring-boot-starter-json-3.4.1.jar:/Users/jhon/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.18.2/jackson-databind-2.18.2.jar:/Users/jhon/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.18.2/jackson-annotations-2.18.2.jar:/Users/jhon/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.18.2/jackson-core-2.18.2.jar:/Users/jhon/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.18.2/jackson-datatype-jdk8-2.18.2.jar:/Users/jhon/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.18.2/jackson-datatype-jsr310-2.18.2.jar:/Users/jhon/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.18.2/jackson-module-parameter-names-2.18.2.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.4.1/spring-boot-starter-tomcat-3.4.1.jar:/Users/jhon/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.34/tomcat-embed-core-10.1.34.jar:/Users/jhon/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.34/tomcat-embed-websocket-10.1.34.jar:/Users/jhon/.m2/repository/org/springframework/spring-web/6.2.1/spring-web-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-beans/6.2.1/spring-beans-6.2.1.jar:/Users/jhon/.m2/repository/io/micrometer/micrometer-observation/1.14.2/micrometer-observation-1.14.2.jar:/Users/jhon/.m2/repository/io/micrometer/micrometer-commons/1.14.2/micrometer-commons-1.14.2.jar:/Users/jhon/.m2/repository/org/springframework/spring-webmvc/6.2.1/spring-webmvc-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-context/6.2.1/spring-context-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-expression/6.2.1/spring-expression-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.4.1/spring-boot-starter-data-jpa-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.4.1/spring-boot-starter-jdbc-3.4.1.jar:/Users/jhon/.m2/repository/com/zaxxer/HikariCP/5.1.0/HikariCP-5.1.0.jar:/Users/jhon/.m2/repository/org/springframework/spring-jdbc/6.2.1/spring-jdbc-6.2.1.jar:/Users/jhon/.m2/repository/org/hibernate/orm/hibernate-core/6.6.4.Final/hibernate-core-6.6.4.Final.jar:/Users/jhon/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/jhon/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/jhon/.m2/repository/org/jboss/logging/jboss-logging/3.6.1.Final/jboss-logging-3.6.1.Final.jar:/Users/jhon/.m2/repository/org/hibernate/common/hibernate-commons-annotations/7.0.3.Final/hibernate-commons-annotations-7.0.3.Final.jar:/Users/jhon/.m2/repository/io/smallrye/jandex/3.2.0/jandex-3.2.0.jar:/Users/jhon/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/Users/jhon/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/Users/jhon/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/Users/jhon/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/Users/jhon/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/Users/jhon/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/jhon/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/jhon/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/jhon/.m2/repository/org/springframework/data/spring-data-jpa/3.4.1/spring-data-jpa-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/data/spring-data-commons/3.4.1/spring-data-commons-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-orm/6.2.1/spring-orm-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-tx/6.2.1/spring-tx-6.2.1.jar:/Users/jhon/.m2/repository/org/slf4j/slf4j-api/2.0.16/slf4j-api-2.0.16.jar:/Users/jhon/.m2/repository/org/springframework/spring-aspects/6.2.1/spring-aspects-6.2.1.jar:/Users/jhon/.m2/repository/org/aspectj/aspectjweaver/1.9.22.1/aspectjweaver-1.9.22.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.4.1/spring-boot-starter-security-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-aop/6.2.1/spring-aop-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/security/spring-security-config/6.4.2/spring-security-config-6.4.2.jar:/Users/jhon/.m2/repository/org/springframework/security/spring-security-web/6.4.2/spring-security-web-6.4.2.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.4.1/spring-boot-starter-validation-3.4.1.jar:/Users/jhon/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.34/tomcat-embed-el-10.1.34.jar:/Users/jhon/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.2.Final/hibernate-validator-8.0.2.Final.jar:/Users/jhon/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-devtools/3.4.1/spring-boot-devtools-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot/3.4.1/spring-boot-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.4.1/spring-boot-autoconfigure-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.4.1/spring-boot-starter-test-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-test/3.4.1/spring-boot-test-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.4.1/spring-boot-test-autoconfigure-3.4.1.jar:/Users/jhon/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/jhon/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/Users/jhon/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/Users/jhon/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/Users/jhon/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/Users/jhon/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/Users/jhon/.m2/repository/org/assertj/assertj-core/3.26.3/assertj-core-3.26.3.jar:/Users/jhon/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/Users/jhon/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/jhon/.m2/repository/org/junit/jupiter/junit-jupiter/5.12.0/junit-jupiter-5.12.0.jar:/Users/jhon/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.12.0/junit-jupiter-params-5.12.0.jar:/Users/jhon/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.12.0/junit-jupiter-engine-5.12.0.jar:/Users/jhon/.m2/repository/org/junit/platform/junit-platform-engine/1.12.0/junit-platform-engine-1.12.0.jar:/Users/jhon/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/Users/jhon/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/jhon/.m2/repository/org/springframework/spring-core/6.2.1/spring-core-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-jcl/6.2.1/spring-jcl-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-test/6.2.1/spring-test-6.2.1.jar:/Users/jhon/.m2/repository/org/xmlunit/xmlunit-core/2.10.0/xmlunit-core-2.10.0.jar:/Users/jhon/.m2/repository/org/postgresql/postgresql/42.7.4/postgresql-42.7.4.jar:/Users/jhon/.m2/repository/org/checkerframework/checker-qual/3.42.0/checker-qual-3.42.0.jar:/Users/jhon/.m2/repository/com/h2database/h2/2.3.232/h2-2.3.232.jar:/Users/jhon/.m2/repository/io/github/cdimascio/java-dotenv/5.2.2/java-dotenv-5.2.2.jar:/Users/jhon/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib/1.9.25/kotlin-stdlib-1.9.25.jar:/Users/jhon/.m2/repository/org/jetbrains/annotations/13.0/annotations-13.0.jar:/Users/jhon/.m2/repository/org/springframework/security/spring-security-test/6.4.2/spring-security-test-6.4.2.jar:/Users/jhon/.m2/repository/org/springframework/security/spring-security-core/6.4.2/spring-security-core-6.4.2.jar:/Users/jhon/.m2/repository/org/springframework/security/spring-security-crypto/6.4.2/spring-security-crypto-6.4.2.jar:/Users/jhon/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:/Users/jhon/.m2/repository/org/projectlombok/lombok-mapstruct-binding/0.2.0/lombok-mapstruct-binding-0.2.0.jar:/Users/jhon/.m2/repository/org/mockito/mockito-core/5.14.2/mockito-core-5.14.2.jar:/Users/jhon/.m2/repository/net/bytebuddy/byte-buddy/1.15.11/byte-buddy-1.15.11.jar:/Users/jhon/.m2/repository/net/bytebuddy/byte-buddy-agent/1.15.11/byte-buddy-agent-1.15.11.jar:/Users/jhon/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/jhon/.m2/repository/org/mockito/mockito-junit-jupiter/5.14.2/mockito-junit-jupiter-5.14.2.jar:/Users/jhon/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.12.0/junit-jupiter-api-5.12.0.jar:/Users/jhon/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/jhon/.m2/repository/org/junit/platform/junit-platform-commons/1.12.0/junit-platform-commons-1.12.0.jar:/Users/jhon/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/jhon"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-10-15"/>
    <property name="java.home" value="/usr/local/Cellar/openjdk/23.0.1/libexec/openjdk.jdk/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/jhon/GradeHub"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="apple.awt.application.name" value="ForkedBooter"/>
    <property name="surefire.real.class.path" value="/Users/jhon/GradeHub/target/surefire/surefirebooter-20250306230304948_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="23.0.1"/>
    <property name="user.name" value="jhon"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="15.3.1"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Homebrew"/>
    <property name="localRepository" value="/Users/jhon/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="java.io.tmpdir" value="/var/folders/tx/npk_dlpd34n83z_21_6j_6pc0000gn/T/"/>
    <property name="debug" value="true"/>
    <property name="com.zaxxer.hikari.pool_number" value="2"/>
    <property name="java.version" value="23.0.1"/>
    <property name="user.dir" value="/Users/jhon/GradeHub"/>
    <property name="os.arch" value="x86_64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="14305"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/jhon/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Homebrew"/>
    <property name="java.vm.version" value="23.0.1"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="67.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[GradeHub] "/>
  </properties>
  <testcase name="findCourseByStudentId" classname="com.github.gradehub.repositories.CourseRepositoryTest" time="0.125">
    <system-out><![CDATA[2025-03-06T23:03:24.332-06:00 DEBUG 14305 --- [GradeHub] [           main] b.t.a.o.j.DataJpaTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [CourseRepositoryTest]: using SpringBootContextLoader
2025-03-06T23:03:24.333-06:00  INFO 14305 --- [GradeHub] [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.github.gradehub.repositories.CourseRepositoryTest]: CourseRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-06T23:03:24.335-06:00 DEBUG 14305 --- [GradeHub] [           main] b.t.a.o.j.DataJpaTestContextBootstrapper : Using ContextCustomizerFactory implementations for test class [CourseRepositoryTest]: [ImportsContextCustomizerFactory, ExcludeFilterContextCustomizerFactory, HttpGraphQlTesterContextCustomizerFactory, DuplicateJsonObjectContextCustomizerFactory, MockitoContextCustomizerFactory, TestRestTemplateContextCustomizerFactory, WebTestClientContextCustomizerFactory, DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory, OnFailureConditionReportContextCustomizerFactory, OverrideAutoConfigurationContextCustomizerFactory, ObservabilityContextCustomizerFactory, TypeExcludeFiltersContextCustomizerFactory, PropertyMappingContextCustomizerFactory, WebDriverContextCustomizerFactory, BeanOverrideContextCustomizerFactory, MockServerContainerContextCustomizerFactory, DynamicPropertiesContextCustomizerFactory]
2025-03-06T23:03:24.379-06:00 DEBUG 14305 --- [GradeHub] [           main] b.t.a.o.j.DataJpaTestContextBootstrapper : Using ContextCustomizers for test class [CourseRepositoryTest]: [ImportsContextCustomizer, ExcludeFilterContextCustomizer, DuplicateJsonObjectContextCustomizer, MockitoContextCustomizer, DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer, OnFailureConditionReportContextCustomizer, DisableAutoConfigurationContextCustomizer, DisableObservabilityContextCustomizer, TypeExcludeFiltersContextCustomizer, PropertyMappingContextCustomizer, WebDriverContextCustomizer, DynamicPropertiesContextCustomizer]
2025-03-06T23:03:24.380-06:00  INFO 14305 --- [GradeHub] [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.github.gradehub.GradeHubApplication for test class com.github.gradehub.repositories.CourseRepositoryTest
2025-03-06T23:03:24.383-06:00 DEBUG 14305 --- [GradeHub] [           main] b.t.a.o.j.DataJpaTestContextBootstrapper : Using TestExecutionListeners for test class [CourseRepositoryTest]: [ServletTestExecutionListener, DirtiesContextBeforeModesTestExecutionListener, ApplicationEventsTestExecutionListener, MockitoTestExecutionListener, BeanOverrideTestExecutionListener, DependencyInjectionTestExecutionListener, DirtiesContextTestExecutionListener, CommonCachesTestExecutionListener, TransactionalTestExecutionListener, SqlScriptsTestExecutionListener, EventPublishingTestExecutionListener, WithSecurityContextTestExecutionListener, ReactorContextTestExecutionListener, ResetMocksTestExecutionListener, RestDocsTestExecutionListener, MockRestServiceServerResetTestExecutionListener, MockMvcPrintOnlyOnFailureTestExecutionListener, WebDriverTestExecutionListener, MockWebServiceServerTestExecutionListener, MockitoResetTestExecutionListener]
2025-03-06T23:03:24.392-06:00  INFO 14305 --- [GradeHub] [           main] o.s.b.d.r.RestartApplicationListener     : Restart disabled due to context in which it is running
2025-03-06T23:03:24.437-06:00 DEBUG 14305 --- [GradeHub] [           main] o.s.boot.ApplicationEnvironment          : Activating profiles [test]

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

2025-03-06T23:03:24.455-06:00  INFO 14305 --- [GradeHub] [           main] c.g.g.repositories.CourseRepositoryTest  : Starting CourseRepositoryTest using Java 23.0.1 with PID 14305 (started by jhon in /Users/jhon/GradeHub)
2025-03-06T23:03:24.456-06:00  INFO 14305 --- [GradeHub] [           main] c.g.g.repositories.CourseRepositoryTest  : The following 1 profile is active: "test"
2025-03-06T23:03:24.456-06:00 DEBUG 14305 --- [GradeHub] [           main] o.s.boot.SpringApplication               : Loading source class com.github.gradehub.GradeHubApplication
2025-03-06T23:03:24.654-06:00  INFO 14305 --- [GradeHub] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-06T23:03:24.658-06:00 DEBUG 14305 --- [GradeHub] [           main] o.s.b.a.AutoConfigurationPackages        : @EnableAutoConfiguration was declared on a class in the package 'com.github.gradehub'. Automatic @Repository and @Entity scanning is enabled.
2025-03-06T23:03:24.698-06:00  INFO 14305 --- [GradeHub] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 40 ms. Found 6 JPA repository interfaces.
2025-03-06T23:03:24.761-06:00  INFO 14305 --- [GradeHub] [           main] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2025-03-06T23:03:24.816-06:00  INFO 14305 --- [GradeHub] [           main] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:23a5c07f-8ee6-4bb6-ac36-9890141ff80e;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-03-06T23:03:24.861-06:00  INFO 14305 --- [GradeHub] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-06T23:03:24.865-06:00  INFO 14305 --- [GradeHub] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-03-06T23:03:24.886-06:00  INFO 14305 --- [GradeHub] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-06T23:03:24.891-06:00  WARN 14305 --- [GradeHub] [           main] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-06T23:03:24.893-06:00  INFO 14305 --- [GradeHub] [           main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@50e1c39c']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-06T23:03:25.223-06:00  INFO 14305 --- [GradeHub] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-06T23:03:25.224-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    drop table if exists assignment cascade 
Hibernate: 
    drop table if exists assignment cascade 
2025-03-06T23:03:25.226-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    drop table if exists course cascade 
Hibernate: 
    drop table if exists course cascade 
2025-03-06T23:03:25.226-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    drop table if exists course_grade cascade 
Hibernate: 
    drop table if exists course_grade cascade 
2025-03-06T23:03:25.226-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    drop table if exists course_taker cascade 
Hibernate: 
    drop table if exists course_taker cascade 
2025-03-06T23:03:25.227-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    drop table if exists grade cascade 
Hibernate: 
    drop table if exists grade cascade 
2025-03-06T23:03:25.227-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    drop table if exists roles cascade 
Hibernate: 
    drop table if exists roles cascade 
2025-03-06T23:03:25.227-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    drop table if exists users cascade 
Hibernate: 
    drop table if exists users cascade 
2025-03-06T23:03:25.228-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    create table assignment (
        assignment_weight float(53) not null check ((assignment_weight>=0) and (assignment_weight<=1)),
        due_date date not null,
        posted_date date not null,
        assignment_id bigint generated by default as identity,
        course_id bigint not null,
        feedback varchar(500),
        assignment_name varchar(255) not null,
        primary key (assignment_id)
    )
Hibernate: 
    create table assignment (
        assignment_weight float(53) not null check ((assignment_weight>=0) and (assignment_weight<=1)),
        due_date date not null,
        posted_date date not null,
        assignment_id bigint generated by default as identity,
        course_id bigint not null,
        feedback varchar(500),
        assignment_name varchar(255) not null,
        primary key (assignment_id)
    )
2025-03-06T23:03:25.231-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    create table course (
        course_id bigint generated by default as identity,
        user_id bigint not null,
        course_description varchar(500),
        course_name varchar(255) not null,
        primary key (course_id)
    )
Hibernate: 
    create table course (
        course_id bigint generated by default as identity,
        user_id bigint not null,
        course_description varchar(500),
        course_name varchar(255) not null,
        primary key (course_id)
    )
2025-03-06T23:03:25.233-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    create table course_grade (
        current_grade float(24),
        course_grade_id bigint generated by default as identity,
        course_id bigint not null,
        user_id bigint not null,
        primary key (course_grade_id)
    )
Hibernate: 
    create table course_grade (
        current_grade float(24),
        course_grade_id bigint generated by default as identity,
        course_id bigint not null,
        user_id bigint not null,
        primary key (course_grade_id)
    )
2025-03-06T23:03:25.234-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    create table course_taker (
        course_id bigint not null,
        user_id bigint not null
    )
Hibernate: 
    create table course_taker (
        course_id bigint not null,
        user_id bigint not null
    )
2025-03-06T23:03:25.236-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    create table grade (
        score float(53) not null check ((score>=0) and (score<=100)),
        assignment_id bigint not null,
        grade_id bigint generated by default as identity,
        user_id bigint not null,
        primary key (grade_id)
    )
Hibernate: 
    create table grade (
        score float(53) not null check ((score>=0) and (score<=100)),
        assignment_id bigint not null,
        grade_id bigint generated by default as identity,
        user_id bigint not null,
        primary key (grade_id)
    )
2025-03-06T23:03:25.239-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    create table roles (
        role_id bigint generated by default as identity,
        role enum ('ADMIN','INSTRUCTOR','STAFF','STUDENT') not null unique,
        primary key (role_id)
    )
Hibernate: 
    create table roles (
        role_id bigint generated by default as identity,
        role enum ('ADMIN','INSTRUCTOR','STAFF','STUDENT') not null unique,
        primary key (role_id)
    )
2025-03-06T23:03:25.241-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    create table users (
        dob date not null,
        grade_level integer,
        role_id bigint not null,
        user_id bigint generated by default as identity,
        person_first_name varchar(50) not null,
        person_last_name varchar(50) not null,
        password varchar(100) not null,
        email varchar(255) not null unique,
        primary key (user_id)
    )
Hibernate: 
    create table users (
        dob date not null,
        grade_level integer,
        role_id bigint not null,
        user_id bigint generated by default as identity,
        person_first_name varchar(50) not null,
        person_last_name varchar(50) not null,
        password varchar(100) not null,
        email varchar(255) not null unique,
        primary key (user_id)
    )
2025-03-06T23:03:25.243-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    create index idx_assignment_name 
       on assignment (assignment_name)
Hibernate: 
    create index idx_assignment_name 
       on assignment (assignment_name)
2025-03-06T23:03:25.245-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    create index idx_assignment_id 
       on assignment (assignment_id)
Hibernate: 
    create index idx_assignment_id 
       on assignment (assignment_id)
2025-03-06T23:03:25.246-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    create index idx_due_date 
       on assignment (due_date)
Hibernate: 
    create index idx_due_date 
       on assignment (due_date)
2025-03-06T23:03:25.247-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    create index idx_course_name 
       on course (course_name)
Hibernate: 
    create index idx_course_name 
       on course (course_name)
2025-03-06T23:03:25.249-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    create index idx_course_user 
       on course_grade (course_id, user_id)
Hibernate: 
    create index idx_course_user 
       on course_grade (course_id, user_id)
2025-03-06T23:03:25.251-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    create index idx_score 
       on grade (score)
Hibernate: 
    create index idx_score 
       on grade (score)
2025-03-06T23:03:25.253-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    create index idx_person_name 
       on users (person_first_name, person_last_name)
Hibernate: 
    create index idx_person_name 
       on users (person_first_name, person_last_name)
2025-03-06T23:03:25.255-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    create index idx_email 
       on users (email)
Hibernate: 
    create index idx_email 
       on users (email)
2025-03-06T23:03:25.256-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    alter table if exists assignment 
       add constraint FKrop26uwnbkstbtfha3ormxp85 
       foreign key (course_id) 
       references course
Hibernate: 
    alter table if exists assignment 
       add constraint FKrop26uwnbkstbtfha3ormxp85 
       foreign key (course_id) 
       references course
2025-03-06T23:03:25.259-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    alter table if exists course 
       add constraint FK2nmcqx8d89xeticql10qxxvdl 
       foreign key (user_id) 
       references users
Hibernate: 
    alter table if exists course 
       add constraint FK2nmcqx8d89xeticql10qxxvdl 
       foreign key (user_id) 
       references users
2025-03-06T23:03:25.262-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    alter table if exists course_grade 
       add constraint FK33qmbpnunukw8uo8l9daynxj4 
       foreign key (course_id) 
       references course
Hibernate: 
    alter table if exists course_grade 
       add constraint FK33qmbpnunukw8uo8l9daynxj4 
       foreign key (course_id) 
       references course
2025-03-06T23:03:25.265-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    alter table if exists course_grade 
       add constraint FK17s4r19m46hb22jft0agamjfv 
       foreign key (user_id) 
       references users
Hibernate: 
    alter table if exists course_grade 
       add constraint FK17s4r19m46hb22jft0agamjfv 
       foreign key (user_id) 
       references users
2025-03-06T23:03:25.268-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    alter table if exists course_taker 
       add constraint FK9h74ihu57hpijslgxpbcq5xk9 
       foreign key (user_id) 
       references users
Hibernate: 
    alter table if exists course_taker 
       add constraint FK9h74ihu57hpijslgxpbcq5xk9 
       foreign key (user_id) 
       references users
2025-03-06T23:03:25.271-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    alter table if exists course_taker 
       add constraint FKfdqlork61tml4ahxla2y63ggg 
       foreign key (course_id) 
       references course
Hibernate: 
    alter table if exists course_taker 
       add constraint FKfdqlork61tml4ahxla2y63ggg 
       foreign key (course_id) 
       references course
2025-03-06T23:03:25.274-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    alter table if exists grade 
       add constraint FKj0v2ipq17spo0ivmd2uxk988n 
       foreign key (assignment_id) 
       references assignment
Hibernate: 
    alter table if exists grade 
       add constraint FKj0v2ipq17spo0ivmd2uxk988n 
       foreign key (assignment_id) 
       references assignment
2025-03-06T23:03:25.276-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    alter table if exists grade 
       add constraint FKobx49ylgv13u0bfh9lau61xvu 
       foreign key (user_id) 
       references users
Hibernate: 
    alter table if exists grade 
       add constraint FKobx49ylgv13u0bfh9lau61xvu 
       foreign key (user_id) 
       references users
2025-03-06T23:03:25.280-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    alter table if exists users 
       add constraint FKp56c1712k691lhsyewcssf40f 
       foreign key (role_id) 
       references roles
Hibernate: 
    alter table if exists users 
       add constraint FKp56c1712k691lhsyewcssf40f 
       foreign key (role_id) 
       references roles
2025-03-06T23:03:25.284-06:00  INFO 14305 --- [GradeHub] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-06T23:03:25.643-06:00 DEBUG 14305 --- [GradeHub] [           main] .s.b.a.l.ConditionEvaluationReportLogger : 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration NONE cache type (CacheCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) found different value in property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TestDatabaseAutoConfiguration#nonTestEmbeddedDataSourceBeanFactoryPostProcessor matched:
      - @ConditionalOnProperty (spring.test.database.replace=NON_TEST) matched (OnPropertyCondition)

   TestEntityManagerAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.persistence.EntityManagerFactory' (OnClassCondition)

   TestEntityManagerAutoConfiguration#testEntityManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) found different value in property 'enabled' (OnPropertyCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   GenericCacheConfiguration:
      Did not match:
         - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration unknown cache type (CacheCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JpaBaseConfiguration.JpaWebConfiguration:
      Did not match:
         - not a servlet web application (OnWebApplicationCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) found different value in property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) found different value in property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   SimpleCacheConfiguration:
      Did not match:
         - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration unknown cache type (CacheCondition)

   TestDatabaseAutoConfiguration#dataSource:
      Did not match:
         - @ConditionalOnProperty (spring.test.database.replace=AUTO_CONFIGURED) did not find property 'replace' (OnPropertyCondition)

   TestDatabaseAutoConfiguration#embeddedDataSourceBeanFactoryPostProcessor:
      Did not match:
         - @ConditionalOnProperty (spring.test.database.replace=ANY) did not find property 'replace' (OnPropertyCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration



2025-03-06T23:03:25.645-06:00  INFO 14305 --- [GradeHub] [           main] c.g.g.repositories.CourseRepositoryTest  : Started CourseRepositoryTest in 1.253 seconds (process running for 20.353)
2025-03-06T23:03:25.665-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        g1_0.grade_id,
        g1_0.assignment_id,
        g1_0.score,
        g1_0.user_id 
    from
        grade g1_0
Hibernate: 
    select
        g1_0.grade_id,
        g1_0.assignment_id,
        g1_0.score,
        g1_0.user_id 
    from
        grade g1_0
2025-03-06T23:03:25.676-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        a1_0.assignment_id,
        a1_0.assignment_name,
        a1_0.posted_date,
        a1_0.assignment_weight,
        a1_0.course_id,
        a1_0.due_date,
        a1_0.feedback 
    from
        assignment a1_0
Hibernate: 
    select
        a1_0.assignment_id,
        a1_0.assignment_name,
        a1_0.posted_date,
        a1_0.assignment_weight,
        a1_0.course_id,
        a1_0.due_date,
        a1_0.feedback 
    from
        assignment a1_0
2025-03-06T23:03:25.680-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        c1_0.course_id,
        c1_0.course_name,
        c1_0.course_description,
        c1_0.user_id 
    from
        course c1_0
Hibernate: 
    select
        c1_0.course_id,
        c1_0.course_name,
        c1_0.course_description,
        c1_0.user_id 
    from
        course c1_0
2025-03-06T23:03:25.684-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        u1_0.user_id,
        u1_0.dob,
        u1_0.email,
        u1_0.grade_level,
        u1_0.password,
        u1_0.person_first_name,
        u1_0.person_last_name,
        u1_0.role_id 
    from
        users u1_0
Hibernate: 
    select
        u1_0.user_id,
        u1_0.dob,
        u1_0.email,
        u1_0.grade_level,
        u1_0.password,
        u1_0.person_first_name,
        u1_0.person_last_name,
        u1_0.role_id 
    from
        users u1_0
2025-03-06T23:03:25.690-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        r1_0.role_id,
        r1_0.role 
    from
        roles r1_0
Hibernate: 
    select
        r1_0.role_id,
        r1_0.role 
    from
        roles r1_0
2025-03-06T23:03:25.693-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
2025-03-06T23:03:25.696-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
2025-03-06T23:03:25.698-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
2025-03-06T23:03:25.700-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
2025-03-06T23:03:25.706-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-03-06T23:03:25.710-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-03-06T23:03:25.715-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-03-06T23:03:25.719-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        course
        (course_name, course_description, user_id, course_id) 
    values
        (?, ?, ?, default)
Hibernate: 
    insert 
    into
        course
        (course_name, course_description, user_id, course_id) 
    values
        (?, ?, ?, default)
2025-03-06T23:03:25.725-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        assignment
        (assignment_name, posted_date, assignment_weight, course_id, due_date, feedback, assignment_id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        assignment
        (assignment_name, posted_date, assignment_weight, course_id, due_date, feedback, assignment_id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-03-06T23:03:25.755-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        course_taker
        (course_id, user_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        course_taker
        (course_id, user_id) 
    values
        (?, ?)
2025-03-06T23:03:25.756-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        course_taker
        (course_id, user_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        course_taker
        (course_id, user_id) 
    values
        (?, ?)
2025-03-06T23:03:25.760-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        c1_0.course_id,
        c1_0.course_name,
        c1_0.course_description,
        c1_0.user_id 
    from
        course c1_0 
    join
        course_taker s1_0 
            on c1_0.course_id=s1_0.course_id 
    where
        s1_0.user_id=?
Hibernate: 
    select
        c1_0.course_id,
        c1_0.course_name,
        c1_0.course_description,
        c1_0.user_id 
    from
        course c1_0 
    join
        course_taker s1_0 
            on c1_0.course_id=s1_0.course_id 
    where
        s1_0.user_id=?
]]></system-out>
  </testcase>
  <testcase name="countNumberOfStudents" classname="com.github.gradehub.repositories.CourseRepositoryTest" time="0.094">
    <system-out><![CDATA[2025-03-06T23:03:25.794-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        g1_0.grade_id,
        g1_0.assignment_id,
        g1_0.score,
        g1_0.user_id 
    from
        grade g1_0
Hibernate: 
    select
        g1_0.grade_id,
        g1_0.assignment_id,
        g1_0.score,
        g1_0.user_id 
    from
        grade g1_0
2025-03-06T23:03:25.800-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        a1_0.assignment_id,
        a1_0.assignment_name,
        a1_0.posted_date,
        a1_0.assignment_weight,
        a1_0.course_id,
        a1_0.due_date,
        a1_0.feedback 
    from
        assignment a1_0
Hibernate: 
    select
        a1_0.assignment_id,
        a1_0.assignment_name,
        a1_0.posted_date,
        a1_0.assignment_weight,
        a1_0.course_id,
        a1_0.due_date,
        a1_0.feedback 
    from
        assignment a1_0
2025-03-06T23:03:25.804-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        c1_0.course_id,
        c1_0.course_name,
        c1_0.course_description,
        c1_0.user_id 
    from
        course c1_0
Hibernate: 
    select
        c1_0.course_id,
        c1_0.course_name,
        c1_0.course_description,
        c1_0.user_id 
    from
        course c1_0
2025-03-06T23:03:25.807-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        u1_0.user_id,
        u1_0.dob,
        u1_0.email,
        u1_0.grade_level,
        u1_0.password,
        u1_0.person_first_name,
        u1_0.person_last_name,
        u1_0.role_id 
    from
        users u1_0
Hibernate: 
    select
        u1_0.user_id,
        u1_0.dob,
        u1_0.email,
        u1_0.grade_level,
        u1_0.password,
        u1_0.person_first_name,
        u1_0.person_last_name,
        u1_0.role_id 
    from
        users u1_0
2025-03-06T23:03:25.810-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        r1_0.role_id,
        r1_0.role 
    from
        roles r1_0
Hibernate: 
    select
        r1_0.role_id,
        r1_0.role 
    from
        roles r1_0
2025-03-06T23:03:25.812-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
2025-03-06T23:03:25.814-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
2025-03-06T23:03:25.816-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
2025-03-06T23:03:25.819-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
2025-03-06T23:03:25.824-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-03-06T23:03:25.828-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-03-06T23:03:25.834-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-03-06T23:03:25.838-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        course
        (course_name, course_description, user_id, course_id) 
    values
        (?, ?, ?, default)
Hibernate: 
    insert 
    into
        course
        (course_name, course_description, user_id, course_id) 
    values
        (?, ?, ?, default)
2025-03-06T23:03:25.841-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        assignment
        (assignment_name, posted_date, assignment_weight, course_id, due_date, feedback, assignment_id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        assignment
        (assignment_name, posted_date, assignment_weight, course_id, due_date, feedback, assignment_id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-03-06T23:03:25.862-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        course_taker
        (course_id, user_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        course_taker
        (course_id, user_id) 
    values
        (?, ?)
2025-03-06T23:03:25.863-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        course_taker
        (course_id, user_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        course_taker
        (course_id, user_id) 
    values
        (?, ?)
2025-03-06T23:03:25.864-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        count(s1_0.user_id) 
    from
        course c1_0 
    join
        course_taker s1_0 
            on c1_0.course_id=s1_0.course_id 
    where
        c1_0.course_id=?
Hibernate: 
    select
        count(s1_0.user_id) 
    from
        course c1_0 
    join
        course_taker s1_0 
            on c1_0.course_id=s1_0.course_id 
    where
        c1_0.course_id=?
]]></system-out>
  </testcase>
  <testcase name="courseIsEmpty" classname="com.github.gradehub.repositories.CourseRepositoryTest" time="0.096">
    <system-out><![CDATA[2025-03-06T23:03:25.890-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        g1_0.grade_id,
        g1_0.assignment_id,
        g1_0.score,
        g1_0.user_id 
    from
        grade g1_0
Hibernate: 
    select
        g1_0.grade_id,
        g1_0.assignment_id,
        g1_0.score,
        g1_0.user_id 
    from
        grade g1_0
2025-03-06T23:03:25.893-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        a1_0.assignment_id,
        a1_0.assignment_name,
        a1_0.posted_date,
        a1_0.assignment_weight,
        a1_0.course_id,
        a1_0.due_date,
        a1_0.feedback 
    from
        assignment a1_0
Hibernate: 
    select
        a1_0.assignment_id,
        a1_0.assignment_name,
        a1_0.posted_date,
        a1_0.assignment_weight,
        a1_0.course_id,
        a1_0.due_date,
        a1_0.feedback 
    from
        assignment a1_0
2025-03-06T23:03:25.898-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        c1_0.course_id,
        c1_0.course_name,
        c1_0.course_description,
        c1_0.user_id 
    from
        course c1_0
Hibernate: 
    select
        c1_0.course_id,
        c1_0.course_name,
        c1_0.course_description,
        c1_0.user_id 
    from
        course c1_0
2025-03-06T23:03:25.902-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        u1_0.user_id,
        u1_0.dob,
        u1_0.email,
        u1_0.grade_level,
        u1_0.password,
        u1_0.person_first_name,
        u1_0.person_last_name,
        u1_0.role_id 
    from
        users u1_0
Hibernate: 
    select
        u1_0.user_id,
        u1_0.dob,
        u1_0.email,
        u1_0.grade_level,
        u1_0.password,
        u1_0.person_first_name,
        u1_0.person_last_name,
        u1_0.role_id 
    from
        users u1_0
2025-03-06T23:03:25.905-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        r1_0.role_id,
        r1_0.role 
    from
        roles r1_0
Hibernate: 
    select
        r1_0.role_id,
        r1_0.role 
    from
        roles r1_0
2025-03-06T23:03:25.907-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
2025-03-06T23:03:25.911-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
2025-03-06T23:03:25.914-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
2025-03-06T23:03:25.916-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
2025-03-06T23:03:25.924-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-03-06T23:03:25.927-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-03-06T23:03:25.931-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-03-06T23:03:25.934-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        course
        (course_name, course_description, user_id, course_id) 
    values
        (?, ?, ?, default)
Hibernate: 
    insert 
    into
        course
        (course_name, course_description, user_id, course_id) 
    values
        (?, ?, ?, default)
2025-03-06T23:03:25.939-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        assignment
        (assignment_name, posted_date, assignment_weight, course_id, due_date, feedback, assignment_id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        assignment
        (assignment_name, posted_date, assignment_weight, course_id, due_date, feedback, assignment_id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-03-06T23:03:25.942-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        course
        (course_name, course_description, user_id, course_id) 
    values
        (?, ?, ?, default)
Hibernate: 
    insert 
    into
        course
        (course_name, course_description, user_id, course_id) 
    values
        (?, ?, ?, default)
2025-03-06T23:03:25.949-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        course_taker
        (course_id, user_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        course_taker
        (course_id, user_id) 
    values
        (?, ?)
2025-03-06T23:03:25.950-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        course_taker
        (course_id, user_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        course_taker
        (course_id, user_id) 
    values
        (?, ?)
2025-03-06T23:03:25.951-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        count(s1_0.user_id) 
    from
        course c1_0 
    join
        course_taker s1_0 
            on c1_0.course_id=s1_0.course_id 
    where
        c1_0.course_id=?
Hibernate: 
    select
        count(s1_0.user_id) 
    from
        course c1_0 
    join
        course_taker s1_0 
            on c1_0.course_id=s1_0.course_id 
    where
        c1_0.course_id=?
2025-03-06T23:03:25.964-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        c1_0.course_id,
        c1_0.course_name,
        c1_0.course_description,
        c1_0.user_id 
    from
        course c1_0 
    where
        c1_0.user_id=?
Hibernate: 
    select
        c1_0.course_id,
        c1_0.course_name,
        c1_0.course_description,
        c1_0.user_id 
    from
        course c1_0 
    where
        c1_0.user_id=?
]]></system-out>
  </testcase>
  <testcase name="countCoursesByTeacherId" classname="com.github.gradehub.repositories.CourseRepositoryTest" time="0.103">
    <system-out><![CDATA[2025-03-06T23:03:25.999-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        g1_0.grade_id,
        g1_0.assignment_id,
        g1_0.score,
        g1_0.user_id 
    from
        grade g1_0
Hibernate: 
    select
        g1_0.grade_id,
        g1_0.assignment_id,
        g1_0.score,
        g1_0.user_id 
    from
        grade g1_0
2025-03-06T23:03:26.006-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        a1_0.assignment_id,
        a1_0.assignment_name,
        a1_0.posted_date,
        a1_0.assignment_weight,
        a1_0.course_id,
        a1_0.due_date,
        a1_0.feedback 
    from
        assignment a1_0
Hibernate: 
    select
        a1_0.assignment_id,
        a1_0.assignment_name,
        a1_0.posted_date,
        a1_0.assignment_weight,
        a1_0.course_id,
        a1_0.due_date,
        a1_0.feedback 
    from
        assignment a1_0
2025-03-06T23:03:26.011-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        c1_0.course_id,
        c1_0.course_name,
        c1_0.course_description,
        c1_0.user_id 
    from
        course c1_0
Hibernate: 
    select
        c1_0.course_id,
        c1_0.course_name,
        c1_0.course_description,
        c1_0.user_id 
    from
        course c1_0
2025-03-06T23:03:26.015-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        u1_0.user_id,
        u1_0.dob,
        u1_0.email,
        u1_0.grade_level,
        u1_0.password,
        u1_0.person_first_name,
        u1_0.person_last_name,
        u1_0.role_id 
    from
        users u1_0
Hibernate: 
    select
        u1_0.user_id,
        u1_0.dob,
        u1_0.email,
        u1_0.grade_level,
        u1_0.password,
        u1_0.person_first_name,
        u1_0.person_last_name,
        u1_0.role_id 
    from
        users u1_0
2025-03-06T23:03:26.021-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        r1_0.role_id,
        r1_0.role 
    from
        roles r1_0
Hibernate: 
    select
        r1_0.role_id,
        r1_0.role 
    from
        roles r1_0
2025-03-06T23:03:26.024-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
2025-03-06T23:03:26.033-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
2025-03-06T23:03:26.040-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
2025-03-06T23:03:26.043-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
2025-03-06T23:03:26.050-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-03-06T23:03:26.055-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-03-06T23:03:26.059-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-03-06T23:03:26.062-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        course
        (course_name, course_description, user_id, course_id) 
    values
        (?, ?, ?, default)
Hibernate: 
    insert 
    into
        course
        (course_name, course_description, user_id, course_id) 
    values
        (?, ?, ?, default)
2025-03-06T23:03:26.069-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        assignment
        (assignment_name, posted_date, assignment_weight, course_id, due_date, feedback, assignment_id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        assignment
        (assignment_name, posted_date, assignment_weight, course_id, due_date, feedback, assignment_id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-03-06T23:03:26.075-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        c1_0.course_id,
        c1_0.course_name,
        c1_0.course_description,
        c1_0.user_id 
    from
        course c1_0 
    where
        c1_0.user_id=?
Hibernate: 
    select
        c1_0.course_id,
        c1_0.course_name,
        c1_0.course_description,
        c1_0.user_id 
    from
        course c1_0 
    where
        c1_0.user_id=?
]]></system-out>
  </testcase>
  <testcase name="findCoursesByTeacherId" classname="com.github.gradehub.repositories.CourseRepositoryTest" time="0.095">
    <system-out><![CDATA[2025-03-06T23:03:26.108-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        g1_0.grade_id,
        g1_0.assignment_id,
        g1_0.score,
        g1_0.user_id 
    from
        grade g1_0
Hibernate: 
    select
        g1_0.grade_id,
        g1_0.assignment_id,
        g1_0.score,
        g1_0.user_id 
    from
        grade g1_0
2025-03-06T23:03:26.112-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        a1_0.assignment_id,
        a1_0.assignment_name,
        a1_0.posted_date,
        a1_0.assignment_weight,
        a1_0.course_id,
        a1_0.due_date,
        a1_0.feedback 
    from
        assignment a1_0
Hibernate: 
    select
        a1_0.assignment_id,
        a1_0.assignment_name,
        a1_0.posted_date,
        a1_0.assignment_weight,
        a1_0.course_id,
        a1_0.due_date,
        a1_0.feedback 
    from
        assignment a1_0
2025-03-06T23:03:26.116-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        c1_0.course_id,
        c1_0.course_name,
        c1_0.course_description,
        c1_0.user_id 
    from
        course c1_0
Hibernate: 
    select
        c1_0.course_id,
        c1_0.course_name,
        c1_0.course_description,
        c1_0.user_id 
    from
        course c1_0
2025-03-06T23:03:26.123-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        u1_0.user_id,
        u1_0.dob,
        u1_0.email,
        u1_0.grade_level,
        u1_0.password,
        u1_0.person_first_name,
        u1_0.person_last_name,
        u1_0.role_id 
    from
        users u1_0
Hibernate: 
    select
        u1_0.user_id,
        u1_0.dob,
        u1_0.email,
        u1_0.grade_level,
        u1_0.password,
        u1_0.person_first_name,
        u1_0.person_last_name,
        u1_0.role_id 
    from
        users u1_0
2025-03-06T23:03:26.127-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        r1_0.role_id,
        r1_0.role 
    from
        roles r1_0
Hibernate: 
    select
        r1_0.role_id,
        r1_0.role 
    from
        roles r1_0
2025-03-06T23:03:26.131-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
2025-03-06T23:03:26.134-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
2025-03-06T23:03:26.136-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
2025-03-06T23:03:26.139-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
2025-03-06T23:03:26.142-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-03-06T23:03:26.146-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-03-06T23:03:26.149-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-03-06T23:03:26.156-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        course
        (course_name, course_description, user_id, course_id) 
    values
        (?, ?, ?, default)
Hibernate: 
    insert 
    into
        course
        (course_name, course_description, user_id, course_id) 
    values
        (?, ?, ?, default)
2025-03-06T23:03:26.161-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    insert 
    into
        assignment
        (assignment_name, posted_date, assignment_weight, course_id, due_date, feedback, assignment_id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        assignment
        (assignment_name, posted_date, assignment_weight, course_id, due_date, feedback, assignment_id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-03-06T23:03:26.170-06:00 DEBUG 14305 --- [GradeHub] [           main] org.hibernate.SQL                        : 
    select
        c1_0.course_id,
        c1_0.course_name,
        c1_0.course_description,
        c1_0.user_id 
    from
        course c1_0 
    where
        c1_0.user_id=?
Hibernate: 
    select
        c1_0.course_id,
        c1_0.course_name,
        c1_0.course_description,
        c1_0.user_id 
    from
        course c1_0 
    where
        c1_0.user_id=?
]]></system-out>
  </testcase>
</testsuite>