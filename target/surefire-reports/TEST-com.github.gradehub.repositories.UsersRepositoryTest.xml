<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" version="3.0.2" name="com.github.gradehub.repositories.UsersRepositoryTest" time="0.84" tests="6" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="23"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/jhon/GradeHub/target/test-classes:/Users/jhon/GradeHub/target/classes:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.4.1/spring-boot-starter-web-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter/3.4.1/spring-boot-starter-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.4.1/spring-boot-starter-logging-3.4.1.jar:/Users/jhon/.m2/repository/ch/qos/logback/logback-classic/1.5.12/logback-classic-1.5.12.jar:/Users/jhon/.m2/repository/ch/qos/logback/logback-core/1.5.12/logback-core-1.5.12.jar:/Users/jhon/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.3/log4j-to-slf4j-2.24.3.jar:/Users/jhon/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.3/log4j-api-2.24.3.jar:/Users/jhon/.m2/repository/org/slf4j/jul-to-slf4j/2.0.16/jul-to-slf4j-2.0.16.jar:/Users/jhon/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/jhon/.m2/repository/org/yaml/snakeyaml/2.3/snakeyaml-2.3.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.4.1/spring-boot-starter-json-3.4.1.jar:/Users/jhon/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.18.2/jackson-databind-2.18.2.jar:/Users/jhon/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.18.2/jackson-annotations-2.18.2.jar:/Users/jhon/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.18.2/jackson-core-2.18.2.jar:/Users/jhon/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.18.2/jackson-datatype-jdk8-2.18.2.jar:/Users/jhon/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.18.2/jackson-datatype-jsr310-2.18.2.jar:/Users/jhon/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.18.2/jackson-module-parameter-names-2.18.2.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.4.1/spring-boot-starter-tomcat-3.4.1.jar:/Users/jhon/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.34/tomcat-embed-core-10.1.34.jar:/Users/jhon/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.34/tomcat-embed-websocket-10.1.34.jar:/Users/jhon/.m2/repository/org/springframework/spring-web/6.2.1/spring-web-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-beans/6.2.1/spring-beans-6.2.1.jar:/Users/jhon/.m2/repository/io/micrometer/micrometer-observation/1.14.2/micrometer-observation-1.14.2.jar:/Users/jhon/.m2/repository/io/micrometer/micrometer-commons/1.14.2/micrometer-commons-1.14.2.jar:/Users/jhon/.m2/repository/org/springframework/spring-webmvc/6.2.1/spring-webmvc-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-context/6.2.1/spring-context-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-expression/6.2.1/spring-expression-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.4.1/spring-boot-starter-data-jpa-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.4.1/spring-boot-starter-jdbc-3.4.1.jar:/Users/jhon/.m2/repository/com/zaxxer/HikariCP/5.1.0/HikariCP-5.1.0.jar:/Users/jhon/.m2/repository/org/springframework/spring-jdbc/6.2.1/spring-jdbc-6.2.1.jar:/Users/jhon/.m2/repository/org/hibernate/orm/hibernate-core/6.6.4.Final/hibernate-core-6.6.4.Final.jar:/Users/jhon/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/jhon/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/jhon/.m2/repository/org/jboss/logging/jboss-logging/3.6.1.Final/jboss-logging-3.6.1.Final.jar:/Users/jhon/.m2/repository/org/hibernate/common/hibernate-commons-annotations/7.0.3.Final/hibernate-commons-annotations-7.0.3.Final.jar:/Users/jhon/.m2/repository/io/smallrye/jandex/3.2.0/jandex-3.2.0.jar:/Users/jhon/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/Users/jhon/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/Users/jhon/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/Users/jhon/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/Users/jhon/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/Users/jhon/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/jhon/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/jhon/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/jhon/.m2/repository/org/springframework/data/spring-data-jpa/3.4.1/spring-data-jpa-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/data/spring-data-commons/3.4.1/spring-data-commons-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-orm/6.2.1/spring-orm-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-tx/6.2.1/spring-tx-6.2.1.jar:/Users/jhon/.m2/repository/org/slf4j/slf4j-api/2.0.16/slf4j-api-2.0.16.jar:/Users/jhon/.m2/repository/org/springframework/spring-aspects/6.2.1/spring-aspects-6.2.1.jar:/Users/jhon/.m2/repository/org/aspectj/aspectjweaver/1.9.22.1/aspectjweaver-1.9.22.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.4.1/spring-boot-starter-security-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-aop/6.2.1/spring-aop-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/security/spring-security-config/6.4.2/spring-security-config-6.4.2.jar:/Users/jhon/.m2/repository/org/springframework/security/spring-security-web/6.4.2/spring-security-web-6.4.2.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.4.1/spring-boot-starter-validation-3.4.1.jar:/Users/jhon/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.34/tomcat-embed-el-10.1.34.jar:/Users/jhon/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.2.Final/hibernate-validator-8.0.2.Final.jar:/Users/jhon/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-devtools/3.4.1/spring-boot-devtools-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot/3.4.1/spring-boot-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.4.1/spring-boot-autoconfigure-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.4.1/spring-boot-starter-test-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-test/3.4.1/spring-boot-test-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.4.1/spring-boot-test-autoconfigure-3.4.1.jar:/Users/jhon/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/jhon/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/Users/jhon/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/Users/jhon/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/Users/jhon/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/Users/jhon/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/Users/jhon/.m2/repository/org/assertj/assertj-core/3.26.3/assertj-core-3.26.3.jar:/Users/jhon/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/Users/jhon/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/jhon/.m2/repository/org/junit/jupiter/junit-jupiter/5.12.0/junit-jupiter-5.12.0.jar:/Users/jhon/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.12.0/junit-jupiter-params-5.12.0.jar:/Users/jhon/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.12.0/junit-jupiter-engine-5.12.0.jar:/Users/jhon/.m2/repository/org/junit/platform/junit-platform-engine/1.12.0/junit-platform-engine-1.12.0.jar:/Users/jhon/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/Users/jhon/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/jhon/.m2/repository/org/springframework/spring-core/6.2.1/spring-core-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-jcl/6.2.1/spring-jcl-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-test/6.2.1/spring-test-6.2.1.jar:/Users/jhon/.m2/repository/org/xmlunit/xmlunit-core/2.10.0/xmlunit-core-2.10.0.jar:/Users/jhon/.m2/repository/org/postgresql/postgresql/42.7.4/postgresql-42.7.4.jar:/Users/jhon/.m2/repository/org/checkerframework/checker-qual/3.42.0/checker-qual-3.42.0.jar:/Users/jhon/.m2/repository/com/h2database/h2/2.3.232/h2-2.3.232.jar:/Users/jhon/.m2/repository/io/github/cdimascio/java-dotenv/5.2.2/java-dotenv-5.2.2.jar:/Users/jhon/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib/1.9.25/kotlin-stdlib-1.9.25.jar:/Users/jhon/.m2/repository/org/jetbrains/annotations/13.0/annotations-13.0.jar:/Users/jhon/.m2/repository/org/springframework/security/spring-security-test/6.4.2/spring-security-test-6.4.2.jar:/Users/jhon/.m2/repository/org/springframework/security/spring-security-core/6.4.2/spring-security-core-6.4.2.jar:/Users/jhon/.m2/repository/org/springframework/security/spring-security-crypto/6.4.2/spring-security-crypto-6.4.2.jar:/Users/jhon/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:/Users/jhon/.m2/repository/org/projectlombok/lombok-mapstruct-binding/0.2.0/lombok-mapstruct-binding-0.2.0.jar:/Users/jhon/.m2/repository/org/mockito/mockito-core/5.14.2/mockito-core-5.14.2.jar:/Users/jhon/.m2/repository/net/bytebuddy/byte-buddy/1.15.11/byte-buddy-1.15.11.jar:/Users/jhon/.m2/repository/net/bytebuddy/byte-buddy-agent/1.15.11/byte-buddy-agent-1.15.11.jar:/Users/jhon/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/jhon/.m2/repository/org/mockito/mockito-junit-jupiter/5.14.2/mockito-junit-jupiter-5.14.2.jar:/Users/jhon/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.12.0/junit-jupiter-api-5.12.0.jar:/Users/jhon/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/jhon/.m2/repository/org/junit/platform/junit-platform-commons/1.12.0/junit-platform-commons-1.12.0.jar:/Users/jhon/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:"/>
    <property name="java.vm.vendor" value="Homebrew"/>
    <property name="net.bytebuddy.experimental" value="true"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="user.timezone" value="America/Chicago"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="PROD_DB_PASSWORD" value="JChicagoo1618$$"/>
    <property name="TEST_DB_PASSWORD" value="password"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="23"/>
    <property name="APPLICATION_NAME" value="GradeHub"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="/usr/local/Cellar/openjdk/23.0.1/libexec/openjdk.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/jhon/GradeHub/target/surefire/surefirebooter-20250306223734226_3.jar /Users/jhon/GradeHub/target/surefire 2025-03-06T22-37-34_022-jvmRun1 surefire-20250306223734226_1tmp surefire_0-20250306223734226_2tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/jhon/GradeHub/target/test-classes:/Users/jhon/GradeHub/target/classes:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.4.1/spring-boot-starter-web-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter/3.4.1/spring-boot-starter-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.4.1/spring-boot-starter-logging-3.4.1.jar:/Users/jhon/.m2/repository/ch/qos/logback/logback-classic/1.5.12/logback-classic-1.5.12.jar:/Users/jhon/.m2/repository/ch/qos/logback/logback-core/1.5.12/logback-core-1.5.12.jar:/Users/jhon/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.3/log4j-to-slf4j-2.24.3.jar:/Users/jhon/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.3/log4j-api-2.24.3.jar:/Users/jhon/.m2/repository/org/slf4j/jul-to-slf4j/2.0.16/jul-to-slf4j-2.0.16.jar:/Users/jhon/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/jhon/.m2/repository/org/yaml/snakeyaml/2.3/snakeyaml-2.3.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.4.1/spring-boot-starter-json-3.4.1.jar:/Users/jhon/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.18.2/jackson-databind-2.18.2.jar:/Users/jhon/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.18.2/jackson-annotations-2.18.2.jar:/Users/jhon/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.18.2/jackson-core-2.18.2.jar:/Users/jhon/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.18.2/jackson-datatype-jdk8-2.18.2.jar:/Users/jhon/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.18.2/jackson-datatype-jsr310-2.18.2.jar:/Users/jhon/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.18.2/jackson-module-parameter-names-2.18.2.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.4.1/spring-boot-starter-tomcat-3.4.1.jar:/Users/jhon/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.34/tomcat-embed-core-10.1.34.jar:/Users/jhon/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.34/tomcat-embed-websocket-10.1.34.jar:/Users/jhon/.m2/repository/org/springframework/spring-web/6.2.1/spring-web-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-beans/6.2.1/spring-beans-6.2.1.jar:/Users/jhon/.m2/repository/io/micrometer/micrometer-observation/1.14.2/micrometer-observation-1.14.2.jar:/Users/jhon/.m2/repository/io/micrometer/micrometer-commons/1.14.2/micrometer-commons-1.14.2.jar:/Users/jhon/.m2/repository/org/springframework/spring-webmvc/6.2.1/spring-webmvc-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-context/6.2.1/spring-context-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-expression/6.2.1/spring-expression-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.4.1/spring-boot-starter-data-jpa-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.4.1/spring-boot-starter-jdbc-3.4.1.jar:/Users/jhon/.m2/repository/com/zaxxer/HikariCP/5.1.0/HikariCP-5.1.0.jar:/Users/jhon/.m2/repository/org/springframework/spring-jdbc/6.2.1/spring-jdbc-6.2.1.jar:/Users/jhon/.m2/repository/org/hibernate/orm/hibernate-core/6.6.4.Final/hibernate-core-6.6.4.Final.jar:/Users/jhon/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/jhon/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/jhon/.m2/repository/org/jboss/logging/jboss-logging/3.6.1.Final/jboss-logging-3.6.1.Final.jar:/Users/jhon/.m2/repository/org/hibernate/common/hibernate-commons-annotations/7.0.3.Final/hibernate-commons-annotations-7.0.3.Final.jar:/Users/jhon/.m2/repository/io/smallrye/jandex/3.2.0/jandex-3.2.0.jar:/Users/jhon/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/Users/jhon/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/Users/jhon/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/Users/jhon/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/Users/jhon/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/Users/jhon/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/jhon/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/jhon/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/jhon/.m2/repository/org/springframework/data/spring-data-jpa/3.4.1/spring-data-jpa-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/data/spring-data-commons/3.4.1/spring-data-commons-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-orm/6.2.1/spring-orm-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-tx/6.2.1/spring-tx-6.2.1.jar:/Users/jhon/.m2/repository/org/slf4j/slf4j-api/2.0.16/slf4j-api-2.0.16.jar:/Users/jhon/.m2/repository/org/springframework/spring-aspects/6.2.1/spring-aspects-6.2.1.jar:/Users/jhon/.m2/repository/org/aspectj/aspectjweaver/1.9.22.1/aspectjweaver-1.9.22.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.4.1/spring-boot-starter-security-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-aop/6.2.1/spring-aop-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/security/spring-security-config/6.4.2/spring-security-config-6.4.2.jar:/Users/jhon/.m2/repository/org/springframework/security/spring-security-web/6.4.2/spring-security-web-6.4.2.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.4.1/spring-boot-starter-validation-3.4.1.jar:/Users/jhon/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.34/tomcat-embed-el-10.1.34.jar:/Users/jhon/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.2.Final/hibernate-validator-8.0.2.Final.jar:/Users/jhon/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-devtools/3.4.1/spring-boot-devtools-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot/3.4.1/spring-boot-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.4.1/spring-boot-autoconfigure-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.4.1/spring-boot-starter-test-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-test/3.4.1/spring-boot-test-3.4.1.jar:/Users/jhon/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.4.1/spring-boot-test-autoconfigure-3.4.1.jar:/Users/jhon/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/jhon/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/Users/jhon/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/Users/jhon/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/Users/jhon/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/Users/jhon/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/Users/jhon/.m2/repository/org/assertj/assertj-core/3.26.3/assertj-core-3.26.3.jar:/Users/jhon/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/Users/jhon/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/jhon/.m2/repository/org/junit/jupiter/junit-jupiter/5.12.0/junit-jupiter-5.12.0.jar:/Users/jhon/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.12.0/junit-jupiter-params-5.12.0.jar:/Users/jhon/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.12.0/junit-jupiter-engine-5.12.0.jar:/Users/jhon/.m2/repository/org/junit/platform/junit-platform-engine/1.12.0/junit-platform-engine-1.12.0.jar:/Users/jhon/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/Users/jhon/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/jhon/.m2/repository/org/springframework/spring-core/6.2.1/spring-core-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-jcl/6.2.1/spring-jcl-6.2.1.jar:/Users/jhon/.m2/repository/org/springframework/spring-test/6.2.1/spring-test-6.2.1.jar:/Users/jhon/.m2/repository/org/xmlunit/xmlunit-core/2.10.0/xmlunit-core-2.10.0.jar:/Users/jhon/.m2/repository/org/postgresql/postgresql/42.7.4/postgresql-42.7.4.jar:/Users/jhon/.m2/repository/org/checkerframework/checker-qual/3.42.0/checker-qual-3.42.0.jar:/Users/jhon/.m2/repository/com/h2database/h2/2.3.232/h2-2.3.232.jar:/Users/jhon/.m2/repository/io/github/cdimascio/java-dotenv/5.2.2/java-dotenv-5.2.2.jar:/Users/jhon/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib/1.9.25/kotlin-stdlib-1.9.25.jar:/Users/jhon/.m2/repository/org/jetbrains/annotations/13.0/annotations-13.0.jar:/Users/jhon/.m2/repository/org/springframework/security/spring-security-test/6.4.2/spring-security-test-6.4.2.jar:/Users/jhon/.m2/repository/org/springframework/security/spring-security-core/6.4.2/spring-security-core-6.4.2.jar:/Users/jhon/.m2/repository/org/springframework/security/spring-security-crypto/6.4.2/spring-security-crypto-6.4.2.jar:/Users/jhon/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:/Users/jhon/.m2/repository/org/projectlombok/lombok-mapstruct-binding/0.2.0/lombok-mapstruct-binding-0.2.0.jar:/Users/jhon/.m2/repository/org/mockito/mockito-core/5.14.2/mockito-core-5.14.2.jar:/Users/jhon/.m2/repository/net/bytebuddy/byte-buddy/1.15.11/byte-buddy-1.15.11.jar:/Users/jhon/.m2/repository/net/bytebuddy/byte-buddy-agent/1.15.11/byte-buddy-agent-1.15.11.jar:/Users/jhon/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/jhon/.m2/repository/org/mockito/mockito-junit-jupiter/5.14.2/mockito-junit-jupiter-5.14.2.jar:/Users/jhon/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.12.0/junit-jupiter-api-5.12.0.jar:/Users/jhon/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/jhon/.m2/repository/org/junit/platform/junit-platform-commons/1.12.0/junit-platform-commons-1.12.0.jar:/Users/jhon/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/jhon"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-10-15"/>
    <property name="java.home" value="/usr/local/Cellar/openjdk/23.0.1/libexec/openjdk.jdk/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/jhon/GradeHub"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="apple.awt.application.name" value="ForkedBooter"/>
    <property name="surefire.real.class.path" value="/Users/jhon/GradeHub/target/surefire/surefirebooter-20250306223734226_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="23.0.1"/>
    <property name="user.name" value="jhon"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="15.3.1"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Homebrew"/>
    <property name="localRepository" value="/Users/jhon/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="java.io.tmpdir" value="/var/folders/tx/npk_dlpd34n83z_21_6j_6pc0000gn/T/"/>
    <property name="com.zaxxer.hikari.pool_number" value="2"/>
    <property name="java.version" value="23.0.1"/>
    <property name="user.dir" value="/Users/jhon/GradeHub"/>
    <property name="os.arch" value="x86_64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="12428"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/jhon/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Homebrew"/>
    <property name="java.vm.version" value="23.0.1"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="67.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[GradeHub] "/>
  </properties>
  <testcase name="testFindByNameAndLastName" classname="com.github.gradehub.repositories.UsersRepositoryTest" time="0.079">
    <system-out><![CDATA[2025-03-06T22:38:04.269-06:00  INFO 12428 --- [GradeHub] [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.github.gradehub.repositories.UsersRepositoryTest]: UsersRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-06T22:38:04.386-06:00  INFO 12428 --- [GradeHub] [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.github.gradehub.GradeHubApplication for test class com.github.gradehub.repositories.UsersRepositoryTest
Hibernate: 
    select
        g1_0.grade_id,
        g1_0.assignment_id,
        g1_0.score,
        g1_0.user_id 
    from
        grade g1_0
Hibernate: 
    select
        a1_0.assignment_id,
        a1_0.assignment_name,
        a1_0.posted_date,
        a1_0.assignment_weight,
        a1_0.course_id,
        a1_0.due_date,
        a1_0.feedback 
    from
        assignment a1_0
Hibernate: 
    select
        c1_0.course_id,
        c1_0.course_name,
        c1_0.course_description,
        c1_0.user_id 
    from
        course c1_0
Hibernate: 
    select
        u1_0.user_id,
        u1_0.dob,
        u1_0.email,
        u1_0.grade_level,
        u1_0.password,
        u1_0.person_first_name,
        u1_0.person_last_name,
        u1_0.role_id 
    from
        users u1_0
Hibernate: 
    select
        r1_0.role_id,
        r1_0.role 
    from
        roles r1_0
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        course
        (course_name, course_description, user_id, course_id) 
    values
        (?, ?, ?, default)
Hibernate: 
    insert 
    into
        assignment
        (assignment_name, posted_date, assignment_weight, course_id, due_date, feedback, assignment_id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        u1_0.user_id,
        u1_0.dob,
        u1_0.email,
        u1_0.grade_level,
        u1_0.password,
        u1_0.person_first_name,
        u1_0.person_last_name,
        u1_0.role_id 
    from
        users u1_0 
    where
        u1_0.person_first_name=? 
        and u1_0.person_last_name=?
]]></system-out>
  </testcase>
  <testcase name="testFindUsersByCourseId" classname="com.github.gradehub.repositories.UsersRepositoryTest" time="0.079">
    <system-out><![CDATA[Hibernate: 
    select
        g1_0.grade_id,
        g1_0.assignment_id,
        g1_0.score,
        g1_0.user_id 
    from
        grade g1_0
Hibernate: 
    select
        a1_0.assignment_id,
        a1_0.assignment_name,
        a1_0.posted_date,
        a1_0.assignment_weight,
        a1_0.course_id,
        a1_0.due_date,
        a1_0.feedback 
    from
        assignment a1_0
Hibernate: 
    select
        c1_0.course_id,
        c1_0.course_name,
        c1_0.course_description,
        c1_0.user_id 
    from
        course c1_0
Hibernate: 
    select
        u1_0.user_id,
        u1_0.dob,
        u1_0.email,
        u1_0.grade_level,
        u1_0.password,
        u1_0.person_first_name,
        u1_0.person_last_name,
        u1_0.role_id 
    from
        users u1_0
Hibernate: 
    select
        r1_0.role_id,
        r1_0.role 
    from
        roles r1_0
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        course
        (course_name, course_description, user_id, course_id) 
    values
        (?, ?, ?, default)
Hibernate: 
    insert 
    into
        assignment
        (assignment_name, posted_date, assignment_weight, course_id, due_date, feedback, assignment_id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        course_taker
        (course_id, user_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        course_taker
        (course_id, user_id) 
    values
        (?, ?)
Hibernate: 
    select
        u1_0.user_id,
        u1_0.dob,
        u1_0.email,
        u1_0.grade_level,
        u1_0.password,
        u1_0.person_first_name,
        u1_0.person_last_name,
        u1_0.role_id 
    from
        users u1_0 
    join
        course_taker c1_0 
            on u1_0.user_id=c1_0.user_id 
    where
        c1_0.course_id=?
]]></system-out>
  </testcase>
  <testcase name="testFindUsersByCourseId_NoStudentsInCourse" classname="com.github.gradehub.repositories.UsersRepositoryTest" time="0.2">
    <system-out><![CDATA[Hibernate: 
    select
        g1_0.grade_id,
        g1_0.assignment_id,
        g1_0.score,
        g1_0.user_id 
    from
        grade g1_0
Hibernate: 
    select
        a1_0.assignment_id,
        a1_0.assignment_name,
        a1_0.posted_date,
        a1_0.assignment_weight,
        a1_0.course_id,
        a1_0.due_date,
        a1_0.feedback 
    from
        assignment a1_0
Hibernate: 
    select
        c1_0.course_id,
        c1_0.course_name,
        c1_0.course_description,
        c1_0.user_id 
    from
        course c1_0
Hibernate: 
    select
        u1_0.user_id,
        u1_0.dob,
        u1_0.email,
        u1_0.grade_level,
        u1_0.password,
        u1_0.person_first_name,
        u1_0.person_last_name,
        u1_0.role_id 
    from
        users u1_0
Hibernate: 
    select
        r1_0.role_id,
        r1_0.role 
    from
        roles r1_0
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        course
        (course_name, course_description, user_id, course_id) 
    values
        (?, ?, ?, default)
Hibernate: 
    insert 
    into
        assignment
        (assignment_name, posted_date, assignment_weight, course_id, due_date, feedback, assignment_id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        course
        (course_name, course_description, user_id, course_id) 
    values
        (?, ?, ?, default)
Hibernate: 
    insert 
    into
        course_taker
        (course_id, user_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        course_taker
        (course_id, user_id) 
    values
        (?, ?)
Hibernate: 
    select
        u1_0.user_id,
        u1_0.dob,
        u1_0.email,
        u1_0.grade_level,
        u1_0.password,
        u1_0.person_first_name,
        u1_0.person_last_name,
        u1_0.role_id 
    from
        users u1_0 
    join
        course_taker c1_0 
            on u1_0.user_id=c1_0.user_id 
    where
        c1_0.course_id=?
]]></system-out>
  </testcase>
  <testcase name="testFindByEmail" classname="com.github.gradehub.repositories.UsersRepositoryTest" time="0.105">
    <system-out><![CDATA[Hibernate: 
    select
        g1_0.grade_id,
        g1_0.assignment_id,
        g1_0.score,
        g1_0.user_id 
    from
        grade g1_0
Hibernate: 
    select
        a1_0.assignment_id,
        a1_0.assignment_name,
        a1_0.posted_date,
        a1_0.assignment_weight,
        a1_0.course_id,
        a1_0.due_date,
        a1_0.feedback 
    from
        assignment a1_0
Hibernate: 
    select
        c1_0.course_id,
        c1_0.course_name,
        c1_0.course_description,
        c1_0.user_id 
    from
        course c1_0
Hibernate: 
    select
        u1_0.user_id,
        u1_0.dob,
        u1_0.email,
        u1_0.grade_level,
        u1_0.password,
        u1_0.person_first_name,
        u1_0.person_last_name,
        u1_0.role_id 
    from
        users u1_0
Hibernate: 
    select
        r1_0.role_id,
        r1_0.role 
    from
        roles r1_0
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        course
        (course_name, course_description, user_id, course_id) 
    values
        (?, ?, ?, default)
Hibernate: 
    insert 
    into
        assignment
        (assignment_name, posted_date, assignment_weight, course_id, due_date, feedback, assignment_id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        u1_0.user_id,
        u1_0.dob,
        u1_0.email,
        u1_0.grade_level,
        u1_0.password,
        u1_0.person_first_name,
        u1_0.person_last_name,
        u1_0.role_id 
    from
        users u1_0 
    where
        u1_0.email=?
]]></system-out>
  </testcase>
  <testcase name="findNonExistingUser" classname="com.github.gradehub.repositories.UsersRepositoryTest" time="0.109">
    <system-out><![CDATA[Hibernate: 
    select
        g1_0.grade_id,
        g1_0.assignment_id,
        g1_0.score,
        g1_0.user_id 
    from
        grade g1_0
Hibernate: 
    select
        a1_0.assignment_id,
        a1_0.assignment_name,
        a1_0.posted_date,
        a1_0.assignment_weight,
        a1_0.course_id,
        a1_0.due_date,
        a1_0.feedback 
    from
        assignment a1_0
Hibernate: 
    select
        c1_0.course_id,
        c1_0.course_name,
        c1_0.course_description,
        c1_0.user_id 
    from
        course c1_0
Hibernate: 
    select
        u1_0.user_id,
        u1_0.dob,
        u1_0.email,
        u1_0.grade_level,
        u1_0.password,
        u1_0.person_first_name,
        u1_0.person_last_name,
        u1_0.role_id 
    from
        users u1_0
Hibernate: 
    select
        r1_0.role_id,
        r1_0.role 
    from
        roles r1_0
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        course
        (course_name, course_description, user_id, course_id) 
    values
        (?, ?, ?, default)
Hibernate: 
    insert 
    into
        assignment
        (assignment_name, posted_date, assignment_weight, course_id, due_date, feedback, assignment_id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        u1_0.user_id,
        u1_0.dob,
        u1_0.email,
        u1_0.grade_level,
        u1_0.password,
        u1_0.person_first_name,
        u1_0.person_last_name,
        u1_0.role_id 
    from
        users u1_0 
    where
        u1_0.email=?
]]></system-out>
  </testcase>
  <testcase name="roleVerification" classname="com.github.gradehub.repositories.UsersRepositoryTest" time="0.1">
    <system-out><![CDATA[Hibernate: 
    select
        g1_0.grade_id,
        g1_0.assignment_id,
        g1_0.score,
        g1_0.user_id 
    from
        grade g1_0
Hibernate: 
    select
        a1_0.assignment_id,
        a1_0.assignment_name,
        a1_0.posted_date,
        a1_0.assignment_weight,
        a1_0.course_id,
        a1_0.due_date,
        a1_0.feedback 
    from
        assignment a1_0
Hibernate: 
    select
        c1_0.course_id,
        c1_0.course_name,
        c1_0.course_description,
        c1_0.user_id 
    from
        course c1_0
Hibernate: 
    select
        u1_0.user_id,
        u1_0.dob,
        u1_0.email,
        u1_0.grade_level,
        u1_0.password,
        u1_0.person_first_name,
        u1_0.person_last_name,
        u1_0.role_id 
    from
        users u1_0
Hibernate: 
    select
        r1_0.role_id,
        r1_0.role 
    from
        roles r1_0
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        roles
        (role, role_id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        course
        (course_name, course_description, user_id, course_id) 
    values
        (?, ?, ?, default)
Hibernate: 
    insert 
    into
        assignment
        (assignment_name, posted_date, assignment_weight, course_id, due_date, feedback, assignment_id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (dob, email, grade_level, password, person_first_name, person_last_name, role_id, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
]]></system-out>
  </testcase>
</testsuite>